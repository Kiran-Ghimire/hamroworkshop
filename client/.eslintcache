[{"D:\\react JS\\hamroworkshop\\client\\src\\index.js":"1","D:\\react JS\\hamroworkshop\\client\\src\\components\\App.js":"2","D:\\react JS\\hamroworkshop\\client\\src\\components\\Header.js":"3","D:\\react JS\\hamroworkshop\\client\\src\\components\\Home.js":"4","D:\\react JS\\hamroworkshop\\client\\src\\components\\Contact.js":"5","D:\\react JS\\hamroworkshop\\client\\src\\components\\Appointment.js":"6","D:\\react JS\\hamroworkshop\\client\\src\\components\\Services.js":"7","D:\\react JS\\hamroworkshop\\client\\src\\components\\Offers.js":"8","D:\\react JS\\hamroworkshop\\client\\src\\components\\Login\\SignUp.js":"9","D:\\react JS\\hamroworkshop\\client\\src\\components\\Login\\Login.js":"10","D:\\react JS\\hamroworkshop\\client\\src\\components\\Login\\GoogleLog.js":"11","D:\\react JS\\hamroworkshop\\client\\src\\actions\\index.js":"12","D:\\react JS\\hamroworkshop\\client\\src\\actions\\types.js":"13","D:\\react JS\\hamroworkshop\\client\\src\\reducers\\index.js":"14","D:\\react JS\\hamroworkshop\\client\\src\\reducers\\authReducer.js":"15"},{"size":768,"mtime":1614247674321,"results":"16","hashOfConfig":"17"},{"size":1181,"mtime":1614165909847,"results":"18","hashOfConfig":"17"},{"size":147,"mtime":1608268087187,"results":"19","hashOfConfig":"17"},{"size":148,"mtime":1608269433426,"results":"20","hashOfConfig":"17"},{"size":153,"mtime":1608268680710,"results":"21","hashOfConfig":"17"},{"size":161,"mtime":1608268678418,"results":"22","hashOfConfig":"17"},{"size":153,"mtime":1608268688146,"results":"23","hashOfConfig":"17"},{"size":149,"mtime":1608268685526,"results":"24","hashOfConfig":"17"},{"size":7284,"mtime":1613970982939,"results":"25","hashOfConfig":"17"},{"size":6252,"mtime":1614254053113,"results":"26","hashOfConfig":"17"},{"size":784,"mtime":1608535196032,"results":"27","hashOfConfig":"17"},{"size":307,"mtime":1614248715623,"results":"28","hashOfConfig":"17"},{"size":38,"mtime":1614165096532,"results":"29","hashOfConfig":"17"},{"size":153,"mtime":1614165366222,"results":"30","hashOfConfig":"17"},{"size":305,"mtime":1614247538786,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a5f0pc",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react JS\\hamroworkshop\\client\\src\\index.js",[],"D:\\react JS\\hamroworkshop\\client\\src\\components\\App.js",["65"],"import React from 'react';\r\nimport { BrowserRouter, Router, Route, Switch } from 'react-router-dom';\r\n\r\n\r\n\r\nimport Appointment from './Appointment';\r\nimport Contact from './Contact';\r\nimport Home from './Home';\r\nimport Services from './Services';\r\nimport Offers from './Offers';\r\nimport Header from './Header';\r\nimport  Login  from './Login/Login';\r\nimport  SignUp  from './Login/SignUp';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n            <div>\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/\" exact component={Home}/>\r\n                <Route path=\"/hamro/services\" exact component={Services}/>\r\n                <Route path=\"/hamro/appointment\" exact component={Appointment}/>\r\n                <Route path=\"/hamro/offers\" exact component={Offers}/>\r\n                <Route path=\"/hamro/contact\" exact component={Contact}/>\r\n                <Route path=\"/hamro/login\" exact component={Login}/> \r\n                <Route path=\"/hamro/signup\" exact component={SignUp}/>   \r\n            </Switch>\r\n            \r\n            </div>\r\n            </BrowserRouter>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default App;\r\n",["66","67"],"D:\\react JS\\hamroworkshop\\client\\src\\components\\Header.js",[],"D:\\react JS\\hamroworkshop\\client\\src\\components\\Home.js",[],"D:\\react JS\\hamroworkshop\\client\\src\\components\\Contact.js",[],"D:\\react JS\\hamroworkshop\\client\\src\\components\\Appointment.js",[],"D:\\react JS\\hamroworkshop\\client\\src\\components\\Services.js",[],"D:\\react JS\\hamroworkshop\\client\\src\\components\\Offers.js",[],"D:\\react JS\\hamroworkshop\\client\\src\\components\\Login\\SignUp.js",["68","69","70","71","72","73"],"import {\r\n    Typography,\r\n    Box,\r\n    Paper,\r\n    TextField,\r\n    makeStyles,\r\n    Grid,\r\n    Button,\r\n    Checkbox,\r\n    Container\r\n  } from \"@material-ui/core\";\r\n  \r\n  import React, { useEffect, useState } from \"react\";\r\n  \r\n  \r\n  import { Formik, Form } from \"formik\";\r\n  import * as Yup from \"yup\";\r\n  import axios from \"axios\";\r\n  \r\n//   import GLogin from \"./GLogin\";\r\n//   import FLogin from \"./FLogin\";\r\n  \r\n  import { Switch, Link, Route } from \"react-router-dom\";\r\n  import {FcHome} from 'react-icons/fc';\r\n  \r\n  \r\n  \r\n  const useStyles = makeStyles({\r\n    contactContainer: { marginTop: \"10%\", marginBottom: \"10%\" },\r\n    paper: {\r\n      width: \"33rem\",\r\n      padding: \"2.5rem\", \r\n    },\r\n    box: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      marginTop: \"2rem\",\r\n    },\r\n    submitBtn: {\r\n      textAlign: \"center\",\r\n      marginTop: \"1.4rem\",\r\n    }\r\n  });\r\n  \r\n  axios.defaults.withCredentials = true;\r\n  \r\n  const LoginSchema = Yup.object().shape({\r\n    username: Yup.string().min(2, 'Too Short!').max(50, 'Too Long!').required(\"Username is required\"),\r\n    email: Yup.string().email().required(\"Invalid Email!!\"),\r\n    password: Yup.string().required(\"Password is required\"),\r\n    confirmPassword:Yup.string().required(\"Password is required\").oneOf(\r\n      [Yup.ref(\"password\"), null],\r\n      \"Passwords must match.\"\r\n    )\r\n  });\r\n  \r\n  const initialValues = {\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    signUp: false,\r\n  };\r\n  \r\n  const SignUp=() => {\r\n    const [signupStatus, setSignupStatus] = useState(false);\r\n    \r\n  \r\n    const onSubmit = (values) => {\r\n      axios.post('/hamro/register',\r\n      { values\r\n       }).then((response) => {\r\n         console.log(response.data.message);\r\n       });\r\n    \r\n    };\r\n  \r\n    \r\n\r\n    const classes = useStyles();\r\n    \r\n  \r\n    return (\r\n        <div className={classes.background}>\r\n        <Container className={classes.contactContainer}>\r\n        <Typography variant=\"h4\" style={{ textAlign: \"center\", color: \"#c28285\" }}>\r\n        <FcHome  style={{margin:'0 0.5rem -0.2rem 0' }} />Hamro Workshop\r\n        </Typography>\r\n        <Box className={classes.box}>\r\n          <Paper className={classes.paper}>\r\n            <Formik\r\n              initialValues={initialValues}\r\n              validationSchema={LoginSchema}\r\n              onSubmit={onSubmit}\r\n            >\r\n              {({ errors, handleChange, touched, values, setFieldValue }) => (\r\n                <Form>\r\n                  <Grid container spacing={4}>\r\n                  <Grid item xs={12}>\r\n                  <TextField\r\n                    label=\"Username\"\r\n                    size=\"small\"\r\n                    color=\"secondary\"\r\n                    fullWidth\r\n                    name=\"username\"\r\n                    type=\"username\"\r\n                    id=\"username\"\r\n                    autoComplete=\"off\"\r\n                    error={errors.username && touched.username}\r\n                    onChange={handleChange}\r\n                    helperText={\r\n                      errors.username && touched.username ? (\r\n                        <Typography style={{ color: \"#f44336\" }}>\r\n                          {errors.username}\r\n                        </Typography>\r\n                      ) : null\r\n                    }\r\n                  />\r\n                </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        label=\"Your Email\"\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        \r\n                        error={errors.email && touched.email}\r\n                        onChange={handleChange}\r\n                        helperText={\r\n                          errors.email && touched.email ? (\r\n                            <Typography style={{ color: \"#f44336\" }}>\r\n                              {errors.email}\r\n                            </Typography>\r\n                          ) : null\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      {\" \"}\r\n                      <TextField\r\n                        label=\"Password\"\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onChange={handleChange}\r\n                        error={errors.password && touched.password}\r\n                        helperText={\r\n                          errors.password && touched.password ? (\r\n                            <Typography style={{ color: \"#f44336\" }}>\r\n                              {errors.password}\r\n                            </Typography>\r\n                          ) : null\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      {\" \"}\r\n                      <TextField\r\n                        label=\"Confirm Password\"\r\n                        size=\"small\"\r\n                        color=\"secondary\"\r\n                        fullWidth\r\n                        id=\"confirmPassword\"\r\n                        name=\"confirmPassword\"\r\n                        type=\"password\"\r\n                        onChange={handleChange}\r\n                        error={errors.confirmPassword && touched.confirmPassword}\r\n                        helperText={\r\n                          errors.confirmPassword && touched.confirmPassword ? (\r\n                            <Typography style={{ color: \"#f44336\" }}>\r\n                              {errors.confirmPassword}\r\n                            </Typography>\r\n                          ) : null\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    \r\n                    <Box>\r\n                      <Typography>\r\n                        <Checkbox\r\n                          style={{\r\n                            paddingLeft: \"1rem\",\r\n                            marginBottom: \"0.3rem\",\r\n                          }}\r\n                          color=\"default\"\r\n                          value={values.loggedIn}\r\n                          onChange={(value) => setFieldValue(\"signUp\", true)}\r\n                        />\r\n                        I accept the terms and conditions.\r\n                      </Typography>\r\n                    </Box>\r\n                  </Grid>\r\n                  <Box textAlign=\"center\">\r\n                    <Button \r\n                      type=\"submit\"\r\n                      size=\"large\"\r\n                      className={classes.submitBtn}\r\n                      \r\n                    >\r\n                      Sign Up\r\n                    </Button>\r\n                  </Box>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n            <hr style={{ backgroundColor: \"white\" }} />\r\n          </Paper>\r\n        </Box>\r\n      </Container>\r\n        </div>\r\n    );\r\n  }\r\n  export default SignUp;\r\n  \r\n","D:\\react JS\\hamroworkshop\\client\\src\\components\\Login\\Login.js",["74","75","76"],"D:\\react JS\\hamroworkshop\\client\\src\\components\\Login\\GoogleLog.js",[],"D:\\react JS\\hamroworkshop\\client\\src\\actions\\index.js",["77"],"D:\\react JS\\hamroworkshop\\client\\src\\actions\\types.js",[],"D:\\react JS\\hamroworkshop\\client\\src\\reducers\\index.js",[],"D:\\react JS\\hamroworkshop\\client\\src\\reducers\\authReducer.js",["78"],{"ruleId":"79","severity":1,"message":"80","line":2,"column":25,"nodeType":"81","messageId":"82","endLine":2,"endColumn":31},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"79","severity":1,"message":"87","line":13,"column":19,"nodeType":"81","messageId":"82","endLine":13,"endColumn":28},{"ruleId":"79","severity":1,"message":"88","line":23,"column":12,"nodeType":"81","messageId":"82","endLine":23,"endColumn":18},{"ruleId":"79","severity":1,"message":"89","line":23,"column":20,"nodeType":"81","messageId":"82","endLine":23,"endColumn":24},{"ruleId":"79","severity":1,"message":"90","line":23,"column":26,"nodeType":"81","messageId":"82","endLine":23,"endColumn":31},{"ruleId":"79","severity":1,"message":"91","line":66,"column":12,"nodeType":"81","messageId":"82","endLine":66,"endColumn":24},{"ruleId":"79","severity":1,"message":"92","line":66,"column":26,"nodeType":"81","messageId":"82","endLine":66,"endColumn":41},{"ruleId":"79","severity":1,"message":"89","line":25,"column":22,"nodeType":"81","messageId":"82","endLine":25,"endColumn":26},{"ruleId":"79","severity":1,"message":"93","line":67,"column":12,"nodeType":"81","messageId":"82","endLine":67,"endColumn":23},{"ruleId":"94","severity":1,"message":"95","line":105,"column":8,"nodeType":"96","endLine":105,"endColumn":10,"suggestions":"97"},{"ruleId":"79","severity":1,"message":"98","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":13},{"ruleId":"99","severity":1,"message":"100","line":3,"column":1,"nodeType":"101","endLine":10,"endColumn":2},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["102"],"no-negated-in-lhs",["103"],"'useEffect' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'signupStatus' is assigned a value but never used.","'setSignupStatus' is assigned a value but never used.","'loginStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["104"],"'axios' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [history]",{"range":"107","text":"108"},[2468,2470],"[history]"]